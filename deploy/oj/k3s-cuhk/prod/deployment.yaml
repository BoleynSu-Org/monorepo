apiVersion: apps/v1
kind: Deployment
metadata:
  name: oj-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oj-server
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: oj-server
    spec:
      # Not yet supported by NFS
      # hostUsers: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: oj-server
                topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: oj-pv-claim
        - name: workdir
          emptyDir: {}
        - name: rootca
          configMap:
            name: rootca-configmap
      containers:
        - name: oj-server
          volumeMounts:
            - name: data
              mountPath: /data
              readOnly: true
            - mountPath: /workdir
              name: workdir
            - name: rootca
              mountPath: /rootca
          workingDir: /workdir
          image: images_boleynsu_org_oj_oj-server
          envFrom:
            - configMapRef:
                name: oj-configmap
          env:
            - name: DATA
              value: /data
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: oj-secret
                  key: DB_PASSWORD
            - name: DB_ROOTCA
              value: /rootca/rootca.crt
            - name: PORT
              value: "8080"
            - name: TZ
              value: Asia/Hong_Kong
            - name: RUNNER_HOST
              value: oj-c99runner-service
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
          ports:
            - name: http
              containerPort: 8080
          startupProbe:
            httpGet:
              path: /chat
              port: http
            periodSeconds: 1
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /chat
              port: http
            periodSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /chat
              port: http
            periodSeconds: 10
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 1993
            runAsGroup: 1993
      imagePullSecrets:
        - name: registry-access-token-secret
      enableServiceLinks: false
      automountServiceAccountToken: false
      priorityClassName: application-critical
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oj-judge
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oj-judge
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: oj-judge
    spec:
      # Not yet supported by NFS
      # hostUsers: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: oj-judge
                topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: oj-pv-claim
        - name: rootca
          configMap:
            name: rootca-configmap
      containers:
        - name: oj-judge
          volumeMounts:
            - name: data
              mountPath: /data
              readOnly: true
            - name: rootca
              mountPath: /rootca
          image: images_boleynsu_org_oj_oj-judge
          envFrom:
            - configMapRef:
                name: oj-configmap
          env:
            - name: DATA
              value: /data
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: oj-secret
                  key: DB_PASSWORD
            - name: DB_ROOTCA
              value: /rootca/rootca.crt
            - name: RUNNER_HOST
              value: oj-c99runner-service
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 1993
            runAsGroup: 1993
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              memory: 1Gi
      imagePullSecrets:
        - name: registry-access-token-secret
      enableServiceLinks: false
      automountServiceAccountToken: false
      priorityClassName: application-critical
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oj-c99runner
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oj-c99runner
  template:
    metadata:
      labels:
        app: oj-c99runner
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: oj-c99runner
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: oj-c99runner
          image: images_boleynsu_org_oj_oj-c99runner
          resources:
            requests:
              memory: "384Mi"
              cpu: "1010m"
              ephemeral-storage: "2Gi"
            limits:
              memory: "384Mi"
              cpu: "1010m"
              ephemeral-storage: "2Gi"
          ports:
            - name: oj-runner
              containerPort: 1993
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 1993
            runAsGroup: 1993
          startupProbe:
            tcpSocket:
              port: oj-runner
            periodSeconds: 1
            failureThreshold: 60
          readinessProbe:
            tcpSocket:
              port: oj-runner
            periodSeconds: 3
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: oj-runner
            periodSeconds: 10
            failureThreshold: 3
      imagePullSecrets:
        - name: registry-access-token-secret
      enableServiceLinks: false
      automountServiceAccountToken: false
      runtimeClassName: gvisor
      priorityClassName: application-critical
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oj-adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oj-adminer
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: oj-adminer
    spec:
      hostUsers: false
      volumes:
        - name: plugins-enabled
          configMap:
            name: oj-adminer-configmap
        - name: rootca
          configMap:
            name: rootca-configmap
      containers:
        - name: oj-adminer
          image: index.docker.io/library/adminer
          env:
            - name: ADMINER_DEFAULT_SERVER
              valueFrom:
                configMapKeyRef:
                  name: oj-configmap
                  key: DB_HOST
          volumeMounts:
            - name: plugins-enabled
              mountPath: /var/www/html/plugins-enabled
            - name: rootca
              mountPath: /rootca
          ports:
            - name: http
              containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 1993
            runAsGroup: 1993
          resources:
            requests:
              cpu: 100m
              memory: 32Mi
            limits:
              memory: 1Gi
      enableServiceLinks: false
      automountServiceAccountToken: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oj-filebrowser
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oj-filebrowser
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: oj-filebrowser
    spec:
      # Not yet supported by NFS
      # hostUsers: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: oj-filebrowser
                topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: oj-pv-claim
        - name: config
          emptyDir: {}
      containers:
        - name: oj-filebrowser
          volumeMounts:
            - name: data
              mountPath: /srv
            - name: config
              mountPath: /config
          image: index.docker.io/filebrowser/filebrowser
          env:
            - name: FB_PORT
              value: "8080"
            - name: FB_BASEURL
              value: /file
            - name: FB_DATABASE
              value: /config/filebrowser.db
            - name: FB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oj-secret
                  key: FB_PASSWORD
          ports:
            - name: http
              containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            runAsUser: 1993
            runAsGroup: 1993
          startupProbe:
            httpGet:
              path: /file
              port: http
            periodSeconds: 1
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /file
              port: http
            periodSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /file
              port: http
            periodSeconds: 10
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 32Mi
            limits:
              memory: 1Gi
      enableServiceLinks: false
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 1993
        fsGroupChangePolicy: OnRootMismatch

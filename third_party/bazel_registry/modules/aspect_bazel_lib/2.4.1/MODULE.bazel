"aspect-build/bazel-lib"

module(
    name = "aspect_bazel_lib",
    version = "2.4.1",
    bazel_compatibility = [">=6.0.0"],
    compatibility_level = 1,
)

# Lower-bound versions of our dependencies
bazel_dep(name = "bazel_skylib", version = "1.5.0")
bazel_dep(name = "platforms", version = "0.0.8")

# 0.5.4 is the first version with bzlmod support
bazel_dep(name = "stardoc", version = "0.6.2", repo_name = "io_bazel_stardoc")

bazel_lib_toolchains = use_extension("@aspect_bazel_lib//lib:extensions.bzl", "toolchains")
bazel_lib_toolchains.copy_directory()
bazel_lib_toolchains.copy_to_directory()
bazel_lib_toolchains.jq()
bazel_lib_toolchains.yq()
bazel_lib_toolchains.coreutils()
bazel_lib_toolchains.tar()
bazel_lib_toolchains.expand_template()
bazel_lib_toolchains.bats()
use_repo(bazel_lib_toolchains, "bats_toolchains", "bsd_tar_toolchains", "copy_directory_toolchains", "copy_to_directory_toolchains", "coreutils_toolchains", "expand_template_toolchains", "jq_toolchains", "yq_toolchains")

register_toolchains(
    "@copy_directory_toolchains//:all",
    "@copy_to_directory_toolchains//:all",
    "@jq_toolchains//:all",
    "@yq_toolchains//:all",
    "@coreutils_toolchains//:all",
    "@expand_template_toolchains//:all",
    "@bats_toolchains//:all",
    # Expand bsd_tar_toolchains
    "@bsd_tar_toolchains//:linux_amd64_toolchain",
    "@bsd_tar_toolchains//:linux_arm64_toolchain",
    "@bsd_tar_toolchains//:windows_amd64_toolchain",
    # host toolchain must be last, as it's only suitable as a fallback on macos
    "@bsd_tar_toolchains//:host_toolchain",
)

module(
    name = 'protobuf',
    version = '28.3',
    repo_name = 'com_google_protobuf',
)

bazel_dep(
    name = 'abseil-cpp',
    version = '20240722.0',
    repo_name = 'com_google_absl',
)

bazel_dep(
    name = 'bazel_skylib',
    version = '1.7.1',
)


bazel_dep(
    name = 'rules_cc',
    version = '0.1.0',
)


bazel_dep(
    name = 'rules_java',
    version = '8.3.1',
)

bazel_dep(
    name = 'rules_jvm_external',
    version = '6.5',
)

bazel_dep(
    name = 'rules_pkg',
    version = '1.0.1',
)

bazel_dep(
    name = 'rules_python',
    version = '0.38.0',
)

bazel_dep(
    name = 'rules_rust',
    version = '0.54.1',
)

bazel_dep(
    name = 'platforms',
    version = '0.0.10',
)

bazel_dep(
    name = 'zlib',
    version = '1.3.1',
)

bazel_dep(
    name = 'rules_proto',
    version = '6.0.2',
)

python = use_extension(
    '@rules_python//python/extensions:python.bzl',
    'python',
)

python.toolchain(
    is_default = False,
    python_version = '3.8',
)

python.toolchain(
    is_default = False,
    python_version = '3.9',
)

python.toolchain(
    is_default = False,
    python_version = '3.10',
)

python.toolchain(
    is_default = False,
    python_version = '3.11',
)

python.toolchain(
    is_default = True,
    python_version = '3.12',
)

use_repo(
    python,
    system_python = 'python_3_12',
)

pip = use_extension(
    '@rules_python//python/extensions:pip.bzl',
    'pip',
)

pip.parse(
    hub_name = 'pip_deps',
    python_version = '3.8',
    requirements_lock = '//python:requirements.txt',
)

pip.parse(
    hub_name = 'pip_deps',
    python_version = '3.9',
    requirements_lock = '//python:requirements.txt',
)

pip.parse(
    hub_name = 'pip_deps',
    python_version = '3.10',
    requirements_lock = '//python:requirements.txt',
)

pip.parse(
    hub_name = 'pip_deps',
    python_version = '3.11',
    requirements_lock = '//python:requirements.txt',
)

pip.parse(
    hub_name = 'pip_deps',
    python_version = '3.12',
    requirements_lock = '//python:requirements.txt',
)

use_repo(
    pip,
    'pip_deps',
)

rust = use_extension(
    '@rules_rust//rust:extensions.bzl',
    'rust',
)

rust.toolchain(
    edition = '2021',
)

use_repo(
    rust,
    'rust_toolchains',
)

register_toolchains(
    '@rust_toolchains//:all',
)

crate = use_extension(
    '@rules_rust//crate_universe:extension.bzl',
    'crate',
)

crate.spec(
    package = 'googletest',
    version = '>0.0.0',
)

crate.spec(
    package = 'paste',
    version = '>=1',
)

crate.from_specs(
)

use_repo(
    crate,
    crate_index = 'crates',
)
